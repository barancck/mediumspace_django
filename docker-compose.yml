services:      
  django:
    build:
      context: ./backend   # custom image kullanacağımız için docker fileın konumunu bu dosyaya göre tarif ediyoruz
    image: django-python:3.9-bullseye-img
    container_name: firetap-django
    volumes:
      - ./backend:/firetap
    ports:
      - 8888:8888
    env_file:
      - ./backend/z_env_files/.env
    environment:
      - TEST=TEST
      # - CURRENT_ENV=DEV
    working_dir: /firetap
    command: sh -c "python manage.py collectstatic --no-input && gunicorn myproject.wsgi --bind 0.0.0.0:8888 --reload"
    # command: sh -c "python manage.py collectstatic --no-input && python manage.py runserver 0.0.0.0:8888"
    restart: unless-stopped
    # depends_on:
    #   - postgres
      
  nginx:
    build:
      context: ./nginx
    image: nginx-1.23.3-img   # en son official nginx image'ini indiriyor
    container_name: firetap-nginx
    ports:
      - 80:80 #http
      - 443:443 #https
    volumes:
      - ./nginx/active_confs:/etc/nginx/conf.d
      - ./backend/all_static_files:/static  # serving static files via nginx
      - ./backend/all_media_files:/media  ## serving static files via nginx
      - /etc/nginx/ssl:/etc/nginx/ssl # storing ssl certificates #should be :ro in prod

      # - ./nginx/dummy:/dummy
      # - ./nginx:/etc/nginx/conf.d/default.conf:ro  #:ro == read-only #bir süreliğine devre dışı bırakıyorum güvenlik için ileride tekrardan ayarlayacağım
    restart: unless-stopped
    depends_on:    # önce aşağıdaki serverların başlatılmasını bekliyor
      - django



  # postgres:
  #   build:
  #     context: ./backend/databases/postgresql
  #   image: postgres-img
  #   container_name: firetap-postgres
  #   volumes:
  #     - ./backend/databases/postgresql/data/db:/var/lib/postgresql/data
  #   ports:
  #     - 5432:5432
  #   env_file:
  #     - ./backend/z_env_files/.env # TODO postgresql için ayrı bir env dosyası oluşturulabilir
  #   environment:
  #     # - IS_CONTAINER_POSTGRES=True
  #     # - IS_LOCAL_OS_POSTGRES=False
  #     # - IS_SQLITE=False 
  #     # - CONTAINER_POSTGRES_DB_HOST_NAME=postgres 
  #     - CURRENT_ENVIRONMENT=DEV
  #   restart: unless-stopped